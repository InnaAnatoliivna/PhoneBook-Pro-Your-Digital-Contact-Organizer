{"version":3,"file":"static/js/800.5c6d298c.chunk.js","mappings":"sOAEaA,EAA2BC,EAAAA,KAAaC,MAAM,CACvDC,KAAMF,EAAAA,KAEDG,SAAS,oBACTC,QAAQ,yHAA8D,+JAC3EC,OAAQL,EAAAA,KAEHG,SAAS,sBACTC,QAAQ,6EAA8E,+HAGlFE,EAAwBN,EAAAA,GAAW,CAC5CO,MAAOP,EAAAA,GACK,oBACPO,MAAM,uBACNJ,SAAS,qBACdK,SAAUR,EAAAA,GACE,uBACPS,IAAI,EAAG,qDACPN,SAAS,0BAGLO,EAAyBV,EAAAA,GAAW,CAC7CE,KAAMF,EAAAA,GACM,mBACPG,SAAS,oBACdI,MAAOP,EAAAA,GACK,oBACPO,MAAM,uBACNJ,SAAS,qBACdK,SAAUR,EAAAA,GACE,uBACPS,IAAI,EAAG,qDACPN,SAAS,yB,gFClClB,EAA0B,2BAA1B,EAA8D,0BAA9D,EAA+F,wBAA/F,EAA+H,yBAA/H,EAAgK,yBAAhK,EAAiM,yB,kDCoEjM,EA9DkB,WACd,IAAMQ,GAAWC,EAAAA,EAAAA,MAWjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CACIC,cAZU,CAClBR,MAAO,GACPC,SAAU,IAWFQ,iBAAkBV,EAAAA,GAClBW,SATS,SAACC,GAClBP,GAASQ,EAAAA,EAAAA,IAAUD,GACtB,EAIO,SAKK,SAAAE,GAAW,OACR,UAAC,KAAD,CAAMP,UAAWC,EAAjB,WACI,kBAAOD,UAAWC,EAAWO,QAAQ,QAArC,SAA6C,WAC7C,SAAC,KAAD,CACIR,UAAWC,EACXQ,KAAK,QACLC,GAAG,QACHrB,KAAK,QACLsB,YAAY,wBAEhB,SAAC,KAAD,CACItB,KAAK,QACLuB,UAAU,MACVZ,UAAWC,KAGf,kBAAOD,UAAWC,EAAWO,QAAQ,WAArC,SAAgD,cAChD,SAAC,KAAD,CACIR,UAAWC,EACXQ,KAAK,WACLC,GAAG,WACHrB,KAAK,WACLsB,YAAY,cAEhB,SAAC,KAAD,CACItB,KAAK,WACLuB,UAAU,MACVZ,UAAWC,KAGf,mBACIQ,KAAK,SACLT,UAAWC,EAFf,SAGC,YAjCG,KAyC3B,ECtDD,EAVkB,WAEd,OACI,iBAAKD,UAAU,YAAf,WACI,eAAIA,UAAU,eAAd,SAA6B,oBAC7B,SAAC,EAAD,MAGX,C","sources":["components/validationSchemes.js","webpack://react-homework-template/./src/components/LoginForm/loginForm.module.css?9d59","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validationAddContactForm = Yup.object().shape({\n    name: Yup\n        .string()\n        .required('Name is required')\n        .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Invalid name format! Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"),\n    number: Yup\n        .string()\n        .required('Number is required')\n        .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Invalid phone number format! Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"),\n});\n\nexport const validationSchemaLogin = Yup.object({\n    email: Yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: Yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\n\nexport const validationSchemaSignUp = Yup.object({\n    name: Yup\n        .string('Enter your name')\n        .required('Name is required'),\n    email: Yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: Yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"loginForm_wrapper__ymZ9U\",\"button\":\"loginForm_button__eEDkD\",\"form\":\"loginForm_form__Y03VC\",\"input\":\"loginForm_input__Z-Ho9\",\"label\":\"loginForm_label__pSk0+\",\"error\":\"loginForm_error__8N0LI\"};","import React from 'react';\nimport css from './loginForm.module.css';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/operations';\nimport { validationSchemaLogin } from 'components/validationSchemes';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        email: '',\n        password: '',\n    };\n\n    const handleSubmit = (values) => {\n        dispatch(loginUser(values));\n    };\n\n    return (\n        <div className={css.wrapper}>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchemaLogin}\n                onSubmit={handleSubmit}\n            >\n                {formikProps => (\n                    <Form className={css.form}>\n                        <label className={css.label} htmlFor=\"email\">Email</label>\n                        <Field\n                            className={css.input}\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"foobar@example.com\"\n                        />\n                        <ErrorMessage\n                            name=\"email\"\n                            component=\"div\"\n                            className={css.error}\n                        />\n\n                        <label className={css.label} htmlFor=\"password\">Password</label>\n                        <Field\n                            className={css.input}\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"foobar15\"\n                        />\n                        <ErrorMessage\n                            name=\"password\"\n                            component=\"div\"\n                            className={css.error}\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className={css.button}\n                        >\n                            Login\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default LoginForm;","import LoginForm from 'components/LoginForm/LoginForm'\nimport React from 'react'\n\nconst LoginPage = () => {\n\n    return (\n        <div className='container'>\n            <h2 className='form-suptext'>Login, please!</h2>\n            <LoginForm />\n        </div>\n    )\n}\n\nexport default LoginPage"],"names":["validationAddContactForm","Yup","shape","name","required","matches","number","validationSchemaLogin","email","password","min","validationSchemaSignUp","dispatch","useDispatch","className","css","initialValues","validationSchema","onSubmit","values","loginUser","formikProps","htmlFor","type","id","placeholder","component"],"sourceRoot":""}