{"version":3,"file":"static/js/429.c32c69b9.chunk.js","mappings":"gMACA,EAA0B,4BAA1B,EAA+D,2BAA/D,EAAiG,yBAAjG,EAAkI,0BAAlI,EAAoK,0B,kDCO9JA,EAAmBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,GACM,mBACPE,SAAS,oBACdC,MAAOH,EAAAA,GACK,oBACPG,MAAM,uBACND,SAAS,qBACdE,SAAUJ,EAAAA,GACE,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAoElB,EAjEmB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXT,KAAM,GACNE,MAAO,GACPC,SAAU,IAEdL,iBAAkBA,EAClBY,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACjBP,GAASQ,EAAAA,EAAAA,IAAWF,IACpBC,GACH,IAEL,OACI,gBAAKE,UAAWC,EAAhB,UACI,kBAAML,SAAUH,EAAOS,aAAcF,UAAWC,EAAhD,WACI,kBAAOD,UAAWC,EAAlB,SAA6B,UAC7B,kBACID,UAAWC,EACXE,GAAG,OACHjB,KAAK,OACLkB,MAAM,OACNC,YAAY,OACZC,MAAOb,EAAOI,OAAOX,KACrBqB,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,cAKnB,kBAAOV,UAAWC,EAAlB,SAA6B,WAC7B,kBACID,UAAWC,EACXE,GAAG,QACHjB,KAAK,QACLkB,MAAM,QACNC,YAAY,qBACZC,MAAOb,EAAOI,OAAOT,MACrBmB,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,cAInB,kBAAOV,UAAWC,EAAlB,SAA6B,cAC7B,kBACID,UAAWC,EACXE,GAAG,WACHjB,KAAK,WACLkB,MAAM,WACNO,KAAK,WACLN,YAAY,WACZC,MAAOb,EAAOI,OAAOR,SACrBkB,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,cAInB,mBAAQC,KAAK,SAASX,UAAWC,EAAjC,SAA6C,gBAI5D,ECrED,EAVmB,WAEf,OACI,iBAAKD,UAAU,YAAf,WACI,eAAIA,UAAU,eAAd,SAA6B,oBAC7B,SAAC,EAAD,MAGX,C","sources":["webpack://react-homework-template/./src/components/SignUpForm/singUpForm.module.css?84eb","components/SignUpForm/SignUpForm.js","pages/SignUp/SignUp.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"singUpForm_wrapper__dYFwa\",\"button\":\"singUpForm_button__3bKOA\",\"form\":\"singUpForm_form__bEZou\",\"input\":\"singUpForm_input__IHW0j\",\"label\":\"singUpForm_label__BOKmg\"};","import React from 'react';\nimport css from './singUpForm.module.css'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { signUpUser } from 'redux/auth/operations';\n// import { TextField } from '@material-ui/core';\n\nconst validationSchema = yup.object({\n    name: yup\n        .string('Enter your name')\n        .required('Name is required'),\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\n\nconst SignUpForm = () => {\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { resetForm }) => {\n            dispatch(signUpUser(values))\n            resetForm();\n        },\n    });\n    return (\n        <div className={css.wrapper}>\n            <form onSubmit={formik.handleSubmit} className={css.form}>\n                <label className={css.label}>Name</label>\n                <input\n                    className={css.input}\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"name\"\n                    placeholder='John'\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                // error={formik.touched.name && Boolean(formik.errors.name)}\n                // helperText={formik.touched.name && formik.errors.name}\n                />\n\n                <label className={css.label}>Email</label>\n                <input\n                    className={css.input}\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"email\"\n                    placeholder='foobar@example.com'\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                // error={formik.touched.email && Boolean(formik.errors.email)}\n                // helperText={formik.touched.email && formik.errors.email}\n                />\n                <label className={css.label}>Password</label>\n                <input\n                    className={css.input}\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"password\"\n                    type=\"password\"\n                    placeholder='foobar15'\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                // error={formik.touched.password && Boolean(formik.errors.password)}\n                // helperText={formik.touched.password && formik.errors.password}\n                />\n                <button type=\"submit\" className={css.button}>Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUpForm","// import Login from 'pages/Login/Login'\nimport SignUpForm from 'components/SignUpForm/SignUpForm'\nimport React from 'react'\n// import { Link } from 'react-router-dom'\n// import { signUpUser } from 'redux/auth/operations';\n\nconst SignUpPage = () => {\n\n    return (\n        <div className='container'>\n            <h2 className='form-suptext'>Create account</h2>\n            <SignUpForm />\n        </div>\n    )\n}\n\nexport default SignUpPage"],"names":["validationSchema","yup","name","required","email","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","signUpUser","className","css","handleSubmit","id","label","placeholder","value","onChange","handleChange","onBlur","handleBlur","type"],"sourceRoot":""}